language = "C"
include_version = true
include_guard = "QISKIT_H"
style = "type"
cpp_compat = true

after_includes = """
#ifdef QISKIT_C_PYTHON_INTERFACE
    #include <Python.h>
#endif

#include "qiskit/complex.h"

#define QISKIT_RELEASE_LEVEL_DEV 0xA  // dev or "alpha"
#define QISKIT_RELEASE_LEVEL_RC 0xC  // candidate release
#define QISKIT_RELEASE_LEVEL_FINAL 0xF

#define QISKIT_VERSION_MAJOR 2
#define QISKIT_VERSION_MINOR 1
#define QISKIT_VERSION_PATCH 0
#define QISKIT_RELEASE_LEVEL QISKIT_RELEASE_LEVEL_RC
#define QISKIT_RELEASE_SERIAL 1  // 0 for dev or final

#define QISKIT_VERSION "2.1.0rc1"

#define QISKIT_GET_VERSION_HEX(major, minor, patch, level, serial) (\
    (major & 0xff) << 24 | \
    (minor & 0xff) << 16 | \
    (patch & 0xff) << 8 | \
    (level & 0xf) << 4 | \
    (serial & 0xf)\
)

#define QISKIT_VERSION_HEX QISKIT_GET_VERSION_HEX(\
    QISKIT_VERSION_MAJOR, \
    QISKIT_VERSION_MINOR, \
    QISKIT_VERSION_PATCH, \
    QISKIT_RELEASE_LEVEL, \
    QISKIT_RELEASE_SERIAL \
)

// Always expose [cfg(feature = "cbinding")] -- workaround for
// https://github.com/mozilla/cbindgen/issues/995
#define QISKIT_WITH_CBINDINGS

typedef struct QkQuantumRegister QkQuantumRegister;
typedef struct QkClassicalRegister QkClassicalRegister;
"""

[defines]
"feature = cbinding" = "QISKIT_WITH_CBINDINGS"
"feature = python_binding" = "QISKIT_C_PYTHON_INTERFACE"

[parse]
parse_deps = true
include = ["qiskit-quantum-info", "qiskit-circuit", "qiskit-transpiler"]

[enum]
prefix_with_name = true

[export.rename]
"SparseObservable" = "QkObs"
"CSparseTerm" = "QkObsTerm"
"BitTerm" = "QkBitTerm"
"Complex64" = "QkComplex64"
"CircuitData" = "QkCircuit"
"StandardGate" = "QkGate"
"OpCounts" = "QkOpCounts"
"OpCount" = "QkOpCount"
"CInstruction" = "QkCircuitInstruction"
"ExitCode" = "QkExitCode"
"QuantumRegister" = "QkQuantumRegister"
"ClassicalRegister" = "QkClassicalRegister"
"Target" = "QkTarget"
"TargetEntry" = "QkTargetEntry"
