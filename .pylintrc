[MAIN]
load-plugins=pylint.extensions.docparams, # enable checking of docstring args
    pylint.extensions.docstyle,  # basic docstring style checks

extension-pkg-allow-list=retworkx, numpy, tweedledum, qiskit._accelerate, rustworkx
ignored-modules=retworkx,retworkx.visualization,retworkx.visit

[MESSAGES CONTROL]
enable=use-symbolic-message-instead

disable=spelling,       # way too noisy
    fixme,              # disabled as TODOs would show up as warnings
    protected-access,   # disabled as we don't follow the public vs private
                        # convention strictly
    duplicate-code,     # disabled as it is too verbose
    redundant-returns-doc, # for @abstractmethod, it cannot interpret "pass"
    # disable the "too-many/few-..." refactoring hints
    too-many-lines, too-many-branches, too-many-locals, too-many-nested-blocks,
    too-many-statements, too-many-instance-attributes, too-many-arguments,
    too-many-public-methods, too-few-public-methods, too-many-ancestors,
    unnecessary-pass,   # allow for methods with just "pass", for clarity
    no-else-return,     # relax "elif" after a clause with a return
    docstring-first-line-empty, # relax docstring style
    import-outside-toplevel,
    import-error,        # overzealous with our optionals/dynamic packages

    # TODO(#9614): these were added in modern Pylint. Decide if we want to enable them. If so,
    #  remove from here and fix the issues. Else, move it above this section and add a comment
    #  with the rationale.
    arguments-renamed,
    broad-exception-raised,
    consider-iterating-dictionary,
    consider-using-dict-items,
    consider-using-enumerate,
    consider-using-f-string,
    consider-using-from-import,
    modified-iterating-list,
    nested-min-max,
    no-member,
    no-value-for-parameter,
    non-ascii-name,
    not-context-manager,
    pointless-exception-statement,
    superfluous-parens,
    unknown-option-value,
    unexpected-keyword-arg,
    unnecessary-dict-index-lookup,
    unnecessary-direct-lambda-call,
    unnecessary-dunder-call,
    unnecessary-ellipsis,
    unnecessary-lambda-assignment,
    unnecessary-list-index-lookup,
    unspecified-encoding,
    unsupported-assignment-operation,
    use-dict-literal,
    use-list-literal,
    use-implicit-booleaness-not-comparison,
    use-maxsplit-arg,
    used-before-assignment,

[REPORTS]
reports=yes

[BASIC]

# Good variable names which should always be accepted, separated by a comma
# i,j,k = typical indices
# n,m = typical numbers
# ex = for exceptions and errors
# v,w = typical vectors
# x,y,z = typical axes
# _ = placeholder name
# q,r,qr,cr,qc = quantum and classical registers, and quantum circuit
# pi = the PI constant
# op = operation iterator
# b = basis iterator
good-names=a,b,i,j,k,d,n,m,ex,v,w,x,y,z,Run,_,logger,q,c,r,qr,cr,qc,nd,pi,op,b,ar,br,p,cp,dt,
    __unittest,iSwapGate,mu

module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
class-rgx=[A-Z_][a-zA-Z0-9]+$
function-rgx=[a-z_][a-z0-9_]{2,30}$
method-rgx=(([a-z_][a-z0-9_]{2,49})|(assert[A-Z][a-zA-Z0-9]{2,43})|(test_[_a-zA-Z0-9]{2,}))$
attr-rgx=[a-z_][a-z0-9_]{2,30}$
argument-rgx=[a-z_][a-z0-9_]{2,30}|ax|dt$
variable-rgx=[a-z_][a-z0-9_]{1,30}$
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

[FORMAT]
max-line-length=105

[SIMILARITIES]
ignore-imports=no

[SPELLING]
spelling-private-dict-file=.local-spellings

[TYPECHECK]
ignored-classes=optparse.Values,thread._local,_thread._local,argparse.Namespace,QuantumCircuit
generated-members=retworkx.visualization,retwork.visit

[DESIGN]
max-args=8
max-attributes=10
max-public-methods=35
