# The branch-protection policies mean that all code pushed to the relevant
# branches must already have been made up-to-date and then tested during the PR
# process, so testing the final push is largely just a quick spot-check.  A
# merged PR only looks like an untested PR because of the "squash-and-merge"
# policy; it creates a new commit object, even though the code state is exactly
# the same (including being merged up with the base branch) as it was before.

trigger:
  branches:
    include: ["main", "stable/*"]

pr: none

jobs:
  - template: "jobs/test-linux.yml"
    parameters:
      # Test a single Python version, ideally not one already tested in PR.
      pythonVersions: ["3.9"]
      testQPY: true
      testImages: true
