parameters:
  - name: "pythonVersion"
    type: string
    displayName: "Version of Python to use"

jobs:
  - job: 'Lint'
    pool: {vmImage: 'ubuntu-latest'}

    variables:
      PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '${{ parameters.pythonVersion }}'
        displayName: 'Use Python ${{ parameters.pythonVersion }}'

      - task: Cache@2
        inputs:
          key: 'pip | "$(Agent.OS)" | "${{ parameters.pythonVersion }}" | "$(Build.BuildNumber)"'
          restoreKeys: |
            pip | "$(Agent.OS)" | "${{ parameters.pythonVersion }}"
            pip | "$(Agent.OS)"
            pip
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip

      - bash: |
          set -e
          python -m pip install --upgrade pip setuptools wheel virtualenv
          virtualenv test-job
          source test-job/bin/activate
          pip install -U -r requirements.txt -r requirements-dev.txt -c constraints.txt
          pip install -U -c constraints.txt -e .
          pip install -U "qiskit-aer" -c constraints.txt
          python setup.py build_ext --inplace
        displayName: 'Install dependencies'

      - bash: |
          set -e
          source test-job/bin/activate
          black --check qiskit test tools examples setup.py
          cargo fmt --check
        displayName: "Formatting"

      - bash: |
          set -e
          source test-job/bin/activate
          pylint -rn qiskit test tools
          cargo clippy -- -D warnings
          tools/verify_headers.py qiskit test
          python tools/find_optional_imports.py
          tools/find_stray_release_notes.py
          reno lint
        displayName: 'Lint'
