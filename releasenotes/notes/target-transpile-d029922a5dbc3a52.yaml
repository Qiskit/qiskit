---
features:
  - |
    The following layout and routing transpiler passes from the
    :mod:`.qiskit.transpiler.passes` modules have a new keyword argument,
    ``target`` which takes in a :class:`~.Target` object which is used to model
    the constraints of a target backend. If the ``target`` keyword argument is
    specified it will be used as the source of truth for any hardware
    constraints used in the operation of the transpiler pass. It will
    superscede any other arguments for specifying hardware constraints,
    typically those arguments which take a :class:`~.CouplingMap`,
    :class:~.InstructionScheduleMap` or a basis gate list.
    The list of these passes with the new ``target`` argument are:

      * :class:`~.Unroller`
      * :class:`~.PulseGate`
      * :class:`~.RZXCalibrationBuilder`
      * :class:`~.CommutativeCancellation`
      * :class:`~.EchoRZXWeylDecomposition`
      * :class:`~.Optimize1qGatesSimpleCommutation`
      * :class:`~.Optimize1qGates`
      * :class:`~.CheckCXDirection`
      * :class:`~.ALAPSchedule`
      * :class:`~.ASAPSchedule`
      * :class:`~.ALAPScheduleAnalysis`
      * :class:`~.ASAPScheduleAnalysis`
      * :class:`~.DynamicalDecoupling`
      * :class:`~.PadDynamicalDecoupling`
      * :class:`~.TimeUnitConversion`
  - |
    The pass manager construction helper function :func:`~.generate_scheduling`
    has a new keyword argument ``target`` which is used to specify a :class:`~.Target`
    object to model the constraints of the target backend being compiled for
    when generating a new :class:~.PassManager`. If specified this new argument will
    superscede the other argument ``inst_map``.
