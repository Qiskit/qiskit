---
features:
  - |
    Added the functions ``add_deprecation_to_docstring()``, ``@deprecate_arg``,
    ``@deprecate_func``, and ``remove_sphinx_from_runtime_deprecation_warning()`` to
    ``qiskit.util.deprecation``.

    ``@deprecate_func`` replaces ``@deprecate_function``. It will auto-generate most of the
    deprecation message for you.

    ``@deprecate_arg`` replaces ``@deprecate_arguments``. It will generate a more useful message
    than before. It is also more flexible, like allowing you to set a ``predicate`` so that you
    only deprecate certain situations, such as using a deprecated value or data type.

    ``add_deprecation_to_docstring()`` will rewrite the function's docstring to include a
    Sphinx ``.. deprecated::`` directive so that the deprecation shows up in docs and with
    ``help()``.

    ``remove_sphinx_from_runtime_deprecation_warning()`` removes certain Sphinx-isms from the
    deprecation message, such as roles like ``:ref:``. This allows you to use Sphinx syntax in your
    deprecation message so that it is more useful in the docs, without worrying about
    that syntax making the runtime warning harder to read.

    The deprecation decorators from ``qiskit.util.deprecation`` call
    ``add_deprecation_to_docstring()`` and ``remove_sphinx_from_runtime_deprecation_warning()``
    for you already. But you can call them directly if you are using different mechanisms for
    deprecations.
