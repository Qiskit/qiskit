---
upgrade:
  - |
    All library circuits, i.e. all circuit imports in :mod:`qiskit.circuit.library`, are now 
    wrapped in a :class:`~qiskit.circuit.Instruction` (or :class:`~qiskit.circuit.Gate`, if 
    they are unitary). For example, importing and drawing the :class:`~qiskit.circuit.library.QFT`
    circuit 

    .. code-block::python

        from qiskit.circuit.library import QFT

        qft = QFT(3)
        print(qft.draw())

    before looked like

    .. code-block::

                                                  ┌───┐
        q_0: ────────────────────■────────■───────┤ H ├─X─
                           ┌───┐ │        │P(π/2) └───┘ │
        q_1: ──────■───────┤ H ├─┼────────■─────────────┼─
             ┌───┐ │P(π/2) └───┘ │P(π/4)                │
        q_2: ┤ H ├─■─────────────■──────────────────────X─
             └───┘

    and now looks like

    .. code-block::

             ┌──────┐
        q_0: ┤0     ├
             │      │
        q_1: ┤1 QFT ├
             │      │
        q_2: ┤2     ├
             └──────┘

    To obtain the old circuit, you can call the `decompose` method on the circuit

    .. code-block::python

        from qiskit.circuit.library import QFT

        qft = QFT(3)
        print(qft.decompose().draw())
        

