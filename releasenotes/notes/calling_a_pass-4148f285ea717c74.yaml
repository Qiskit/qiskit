---
features:
  - |
    A new quick way to call a pass is being introduced for convenience. Now it is possible to direcly call a
    :class:`~qiskit.transpiler.BasePass` instance with a :class:`~qiskit.circuit.quantumcircuit.QuantumCircuit`
    instance as a parameter to run the pass on the given circuit.

    For example, in case a transformation pass such as :class:`~qiskit.transpiler.passes.BasisTranslator`:

    .. code-block::

      from qiskit import QuantumCircuit
      from qiskit.transpiler.passes import BasisTranslator
      from qiskit.circuit.equivalence_library import SessionEquivalenceLibrary as sel

      circuit = QuantumCircuit(1)
      circuit.h(0)

      pass_instance = BasisTranslator(sel, ['rx', 'rz', 'cx'])
      result = pass_instance(circuit)

    For the case of an analysis pass, a property set (as `dict` or as :class:`~qiskit.transpiler.propertyset.PropertySet`)
    needs to be added as a parameter and it might be modified "in-place":

    .. code-block::

      from qiskit import QuantumCircuit
      from qiskit.transpiler.passes import Depth

      circuit = QuantumCircuit(1)
      circuit.h(0)

      property_set = {}
      pass_instance = Depth()
      pass_instance(circuit, property_set)
      print(property_set)

