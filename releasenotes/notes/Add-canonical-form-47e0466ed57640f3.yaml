---
features:
  - |
    Added a new DAG to qiskit; the dependency form. In this DAG, the node are
    operation (gates, measure, barrier, etc...). The edges corresponds to
    non-commutation between two operations.
    The ''qiskit.dagcircuit.dagdependency'' introduces the DAGDependency class.
    It allows to create an empty DAG dependency. For exmaple:
    
        from qiskit.dagcircuit.dependency import DAGDependency
        
        dag_dependency = DAGDependency()

  - |
    The ''qiskit.converters.circuit_to_dagdependency'' introduces a converter
    from a QuantumCircuit() object to a DAGDependency() object.
    The ''qiskit.converters.dagdependency_to_ciruit'' introduces a converter
    from a DAGDependency() object to a QuantumCircuit() object.
    The ''qiskit.converters.dag_to_dagdepency'' introduces a converter
    from a DAGCircuit() object to a DAGDependency() object.
    The ''qiskit.converters.dagdependency_to_ciruit'' introduces a converter
    from a DAGDependcy() object to a DAGCircuit() object.

    For example:
    
    from qiskit.converters.dagdependency_to_circuit import dagdependency_to_circuit
    from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit

    circuit_in = QuantumCircuit(2)
    circuit_in.h(qr[0])
    circuit_in.h(qr[1])

    dag_dependency = circuit_to_dagdependency(circuit_in)
    circuit_out = dagdepency_to_circuit(dag_dependency)
    
  - |
    The ''qiskit/visualization/dag_visualization'' has been updated such that
    it can draw DAG dependency forms. It takes the new argument 'type'.
    
    
issues:
  - |
    In ''qiskit.dagcircuit.dagdependency' the function commute could be
    improved.
