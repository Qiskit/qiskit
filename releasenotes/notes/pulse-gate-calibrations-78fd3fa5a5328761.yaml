---
features:
  - |
    Circuits now support a new feature: Pulse gates. This feature enables users who are working
    primarily with ``QuantumCircuits`` to override (for basis gates) or specify (for standard
    and custom gates) a definition of a ``Gate`` operation in terms of time-ordered signals
    across hardware channels. In other words, it allow users to provide a pulse-level "custom
    gate calibration."

    The circuits are built exactly as before. For example::

        from qiskit import pulse
        from qiskit.circuit import QuantumCircuit, Gate

        class RxGate(Gate):
            def __init__(self, theta):
                super().__init__('rxtheta', 1, [theta])

        circ = QuantumCircuit(1)
        circ.h(0)
        circ.append(RxGate(3.14), [1])

    Then, the user must register the calibration with the gate via the circuit method
    ``add_calibration``, which takes a schedule definition as well as the specific qubits
    and parameters that it is defined for::

        # Define the gate implementation as a schedule
        with pulse.build() as custom_h_schedule:
            pulse.play(pulse.library.Drag(...), pulse.DriveChannel(0))

        with pulse.build() as q1_x180:
            pulse.play(pulse.library.Gaussian(...), pulse.DriveChannel(1))

        # Register the schedule to the gate
        circ.add_calibration('h', [0], custom_h_schedule)  # or gate.name string to register
        circ.add_calibration(RxGate(3.14), [0], q1_x180)   # Can accept gate

    Previously, this functionality could only be capitalized on through complete Pulse
    Schedules. With updates to the QASM Qobj and the assembler, jobs can now be sent as
    circuit jobs, augmented with calibration libraries to communicate your custom definitions
    to the backend.

    Circuits with pulse gates may still be lowered to the Pulse Schedule representation by using
    the :py:mod:`qiskit.scheduler`.

    The calibrated gate can also be transpiled using the regular transpilation process::

        transpiled_circuit = transpile(circ, backend)

    The transpiled circuit will leave the calibrated gates on the same qubit as the original
    circuit and will not unroll them to the basis gates.
