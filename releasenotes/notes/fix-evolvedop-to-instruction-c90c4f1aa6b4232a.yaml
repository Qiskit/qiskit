---
fixes:
  - |
    Fix :meth:`~.EvolvedOp.to_instruction` which previously tried to create a 
    :class:`~.UnitaryGate` without exponentiating the operator to evolve.
    Since this operator is generally not unitary, this raised an error (and if 
    the operator would have been unitary by chance, it would not have been the expected result).

    Now calling :meth:`~.EvolvedOp.to_instruction` correctly produces a gate 
    that implements the time evolution of the operator it holds::

      >>> from qiskit.opflow import EvolvedOp, X
      >>> op = EvolvedOp(0.5 * X)
      >>> op.to_instruction()
      Instruction(
          name='unitary', num_qubits=1, num_clbits=0, 
          params=[array([[0.87758256+0.j, 0.-0.47942554j], [0.-0.47942554j, 0.87758256+0.j]])]
      )
