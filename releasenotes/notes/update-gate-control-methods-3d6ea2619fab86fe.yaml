---
upgrade_circuits:
  - |
    The method ``gate.control`` no longer returns an :class:`.AnnotatedOperation` when
    the argument ``annotated`` is set to ``True`` when a native controlled-gate class
    is available. This change is consistent with how the argument ``annotated``
    is used across the standard circuit library, and enables more efficient decompositions
    of control-annotated gates. The affected gates are:

    * Single-controlled ``H``, ``S``, ``Sdg``, ``U3``, ``Y``, ``Z``, ``SX``, ``RX``, ``RY``,
      ``RZ``, ``Swap`` and ``CZ`` gates;

    * Double-controlled ``Z``-gate;

    * arbitrarily-controlled ``Phase``, ``CPhase``, ``MCPhase``, ``U1``, ``CU1``, ``MCU1``
      and ``MCMT`` gates.

  - |
    For two or more controls, the controlled ``RX``,``RY`` and ``RZ`` gates that depend on
    free parameters are now represented as :class:`.AnnotatedOperation` instead of
    :class:`.ControlledGate`. This change does not affect the resulting synthesized circuits,
    but defers synthesis from gate creation time to transpilation time. In addition,
    this makes the handling of controlled parameterized gates more consistent across the standard
    circuit library.
  - |
    The default value of the argument ``annotated`` in :meth:`QuantumCircuit.control` is now
    ``None`` instead of ``False``. This does not affect the actual circuits, but is consistent
    with the default value of ``annotated`` used across the circuit library.
