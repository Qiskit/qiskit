---
features:
  - |
    Added a new kwarg, ``metadata_serializer`` to the
    :func:`.qpy_serialization.dump` function for specifying a custom
    serialization function for use when serializing the
    :attr`.QuantumCircuit.metadata` attribute. By default the
    :func:`~qiskit.circuit.qpy_serialization.dump` function will attempt to
    JSON serialize the contents of :attr`.QuantumCircuit.metadata` for each
    circuit, but since :attr`.QuantumCircuit.metadata` can contain any python
    dictionary even those with contents not JSON serializable by the default
    encoder will lead to circuits that can't be serialized. The new
    ``metadata_serializer`` argument enables users to specify a custom function
    that will be passed the :attr`.QuantumCircuit.metadata` dictionary and
    will return a ``bytes`` object that represents the dictionary. This can
    then be paired with the new ``metadata_deserializer`` argument of the
    :func:`.qpy_serialization.load` function to load whatever the output is.
    (If ``metadata_deserializer`` is not specified on
    :func:`~qiskit.circuit.qpy_serialization.load` then the metadata payload
    will be treated as a UTF8 encoded JSON string).
  - |
    Added a new kwarg, ``metadata_deserializer`` to the
    :func:`.qpy_serialization.load` function for specifying a custom
    deserialization function for use when deserializing the
    :attr`.QuantumCircuit.metadata` contents of a QPY file. By default the
    :func:`~qiskit.circuit.qpy_serialization.load` function will attempt to
    read the metadata payload as a UTF8 encoded JSON string (as that's what is
    dictated by the format specification) but since the
    :attr`.QuantumCircuit.metadata` can contain any python
    dictionary even those with contents not JSON serializable by the default
    encoder will lead to circuits that can't be easily serialized or
    deserialized without dropping the metadata. The new
    ``metadata_deserializer`` argument enables users to specify a custom
    function that will be passed the ``bytes`` metadata payload from the QPY
    and will return the Python dictionary that is represented by that binary
    data which will be used for the :attr`.QuantumCircuit.metadata` attribute.
    This function is designed to be paired with the new
    ``metadata_serializer`` argument of the :func:`.qpy_serialization.dump`
    function to load whatever the output is. (If ``metadata_serializer`` is
    not specified on :func:`~qiskit.circuit.qpy_serialization.dump` then the
    :attr`.QuantumCircuit.metadata` will be serialized as the default
    UTF8 encoded JSON string and a custom deserializer is not needed).
