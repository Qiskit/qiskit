---
features:
  - |
    Added :class:`~qiskit.primitives.BaseSampler` as ``init`` parameter
    for the following phase estimation algorithms:
    :class:`~qiskit.algorithms.IterativePhaseEstimation`,
    :class:`~qiskit.algorithms.PhaseEstimation`,
    :class:`~qiskit.algorithms.HamiltonianPhaseEstimation`.

    .. code-block:: python

      from qiskit.primitives import Sampler
      from qiskit.algorithms.phase_estimators import HamiltonianPhaseEstimation
      from qiskit.synthesis import MatrixExponential
      from qiskit.quantum_info import SparsePauliOp
      from qiskit.opflow import PauliSumOp


      sampler = Sampler()
      num_evaluation_qubits = 6
      phase_est = HamiltonianPhaseEstimation(
          num_evaluation_qubits=num_evaluation_qubits, sampler=sampler
      )

      hamiltonian = PauliSumOp(SparsePauliOp.from_list([("X", 0.5), ("Y", 0.6), ("I", 0.7)]))
      result = phase_est.estimate(
          hamiltonian=hamiltonian,
          state_preparation=None,
          evolution=MatrixExponential(),
          bound=1.05,
      )
deprecations:
  - |
    Using :class:`~qiskit.utils.QuantumInstance` or :class:`~qiskit.providers.Backend` as
    ``init`` parameters will now issue a ``PendingDeprecationWarning``
    for the following phase estimation algorithms:
    :class:`~qiskit.algorithms.IterativePhaseEstimation`,
    :class:`~qiskit.algorithms.PhaseEstimation`,
    :class:`~qiskit.algorithms.HamiltonianPhaseEstimation`
