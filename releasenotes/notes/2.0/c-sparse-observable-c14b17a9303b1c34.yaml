---
features:
  - |
    Introduced a new C API to build and interact with sparse observables.
    While the API surface in this release is fairly small - covering only the 
    :class:`.SparseObservable` class - it represents an important milestone in the evolution
    of Qiskit, as this is the first time the SDK exposes a public interface in C and it lays the
    foundation for future expansions of  the Qiskit C interface. 
    As this is the first public interface in C this is an experimental feature, and if necessary
    the API may change in a minor version release.

    Detailed syntax and additional information can be found in the 
    `C API documentation <https://quantum.cloud.ibm.com/docs/api/qiskit-c>`__.
    A minimal example to construct the 100-qubit observable ``2 X0 Y1 Z2`` is:

    .. code:: c

      #include <complex.h>
      #include <qiskit.h>
      #include <stdint.h>
      #include <stdio.h>

      int main(int argc, char *argv[]) {
          // build a 100-qubit empty observable
          uint32_t num_qubits = 100;
          QkObs *obs = qk_obs_zero(num_qubits);

          // add the term 2 * (X0 Y1 Z2) to the observable
          complex double coeff = 2;
          QkBitTerm bit_terms[3] = {QkBitTerm_X, QkBitTerm_Y, QkBitTerm_Z};
          uint32_t indices[3] = {0, 1, 2};
          QkObsTerm term = {coeff, 3, bit_terms, indices, num_qubits};
          qk_obs_add_term(obs, &term);

          // print some properties
          printf("num_qubits: %u\n", qk_obs_num_qubits(obs));
          printf("num_terms: %lu\n", qk_obs_num_terms(obs));

          // free the memory allocated for the observable
          qk_obs_free(obs);

          return 0;
      }
