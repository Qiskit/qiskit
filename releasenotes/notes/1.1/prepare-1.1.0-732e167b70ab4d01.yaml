---
prelude: >
    The Qiskit 1.1.0 release is a minor feature release that includes a myriad of new feature and bugfixes.
    The highlights for this release are:

      * Support for typed classical variables has been added to Qiskit's :class:`.QuantumCircuit`. These
        classical variables can be specified as inputs or as scoped variables in a :class:`.QuantumCircuit`
        where they e.g. store the output of qubit measurements or target control-flow operations. Support
        for e.g. setting gate parameters or output variables will be added in the future.

      * The default two qubit synthesis methods that are used internally by the transpiler in the
        :class:`.UnitarySynthesis` pass have been re-implemented in Rust. This yields significant
        runtime speedups when decomposing two qubit unitary matrices. As a consequence, the runtime of
        transpilation with optimization level 3 was significantly improved where running
        :class:`.UnitarySynthesis` incurred a large runtime overhead historically. This release also
        starts running :class:`.UnitarySynthesis` as part of the optimization stage in optimization level
        2 because of these runtime performance improvements.

        Additionally, the numeric methods used in :class:`.Isometry` have been moved to Rust,
        enabling large runtime speed-ups in particular for controlled unitary gate synthesis.
        The decomposition for multi-controlled :class:.XGate` and :class:`.PhaseGate`  has been
        improved resulting in a reduction in the number of gates used in the synthesis by more
        than two orders of magnitude.

      * A number of new transpiler passes have been introduced to Qiskit that yield significant runtime
        speedups while also decreasing the size of the transpiled quantum circuits in many cases. Specifically,
        :class:`.ElidePermutations` and :class:`.StarPreRouting` have been demonstrated to have a significant
        impact on the routing output quality and runtime and :class:`.RemoveFinalReset` can improve quantum circuits
        that include resets.

      * The default pass managers have been improved by extending them with the newly introduced transpiler
        passes. In particular, the optimization level 2 preset pass manager from
        :class:`.generate_preset_pass_manager` and used internally by :func:`.transpile` has been refactored to
        have a better tradeoff between runtime and optimization effort in order to serve as a default pass
        manager in future releases. While this release doesn't change the default to use level 2 it is typically a better
        choice than using level 1 or 3.

      * New generic primitive V2 implementations were added, :class:`~.BackendEstimatorV2` and
        :class:`~.BackendSamplerV2`, to compliment the existing full statevector based implementations.


      * Changes to platform support: Python 3.8 is deprecated starting with Qiskit 1.1.0 and will no longer be supported in 1.3.0,
        and arm64 macOS has been promoted to tier 1 support.
upgrade_misc:
  - |
    The minimum supported version of Windows is now Windows 10. In previous releases we did not explicitly list
    a minimum supported version of Windows and implicitly Windows 7, 8, and 8.1 may have worked (but were
    never tested). But due to Rust 1.78 dropping support for older versions of Windows Qiskit's published binaries
    on PyPI will not support older versions of Windows starting with this release. If you're using an older version of Windows
    you can likely still build Qiskit from source using an older Rust compiler (Qiskit's minimum supported Rust
    version for building from source is currently 1.70) but older versions of Windows are not a supported platform
    and are untested.
