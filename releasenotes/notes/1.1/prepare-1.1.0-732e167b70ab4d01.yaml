---
prelude: >
    The Qiskit 1.1.0 release is a minor feature release that includes a myriad of new feature and bugfixes.
    The highlights for this release are:

      * Support for typed classical variables has been added to Qiskit's :class:`.QuantumCircuit`. These
        classical variables can be specified as inputs or as scoped variables in a :class:`.QuantumCircuit`
        where they e.g. store the output of qubit measurements or target control-flow operations. Support
        for e.g. setting gate parameters or output variables will be added in the future.

      * Two synthesis steps essential for generating hardware-conforming quantum circuits have been
        implemented in rust. This yields significant runtime speedups when decomposing unitary matrices
        into two-qubit quantum gates using :class:`.TwoQubitBasisDecomposer` and :class:`.TwoQubitWeylDecomposition`.
        These improvements have a significant impact on the :class:`.UnitarySynthesis` employed in optimization
        level 2 and 3 that incurred a large runtime overhead for these pass managers historically.
        Furthermore, the numeric methods used in :class:`.Isometry` have been moved to rust, enabling large
        runtime speed-ups in particular for controlled unitary gate synthesis. The decomposition for multi-controlled
        not and phase gates has been improved by more than two orders of magnitude.

      * A number of new transpiler passes have been introduced to Qiskit that yield significant runtime
        speedups while also decreasing the size of the transpiled quantum circuits in many cases. Specifically,
        :class:`.ElidePermutations` and :class:`.StarPreRouting` have been demonstrated to have a significant
        impact on the routing output quality and runtime, :class:`.RemoveFinalReset` can improve quantum circuits
        that include resets and :class:`.OptimizeAnnotated` improves the processing of annotated operations.

      * The default pass managers have been improved by extending them with the newly introduced transpiler
        passes, a reorganization of existing passes and a fine-tuning of transpilation parameters. In particular,
        the optimization-level-2 preset pass manager has been refactored to have a better tradeoff between
        the runtime and optimization effort in order to serve as a default pass manager in future releases.

      * New generic primitive V2 implementations were added, :class:`~.BackendEstimatorV2` and
        :class:`~.BackendSamplerV2`, to compliment the existing full statevector based implementations.

      * Improvements to the primitives interface. In particular, :class:`~.SamplerPubResult` was introduced
        to give access to the :meth:`.SamplerPubResult.join_data` method, :class:`.DataBin` was made into a mapping class,
        and :class:`.BitArray` was given many new utility methods.

      * Changes to platform support: python 3.8 is deprecated starting with Qiskit 1.1.0 and will no longer be supported in 1.3.0,
        and arm64 macOS has been promoted to tier 1 support.
upgrade_misc:
  - |
    The minimum supported version of Windows is now Windows 10. In previous releases we did not explicitly list
    a minimum supported version of Windows and implicitly Windows 7, 8, and 8.1 may have worked (but were
    never tested). But do to Rust 1.78 dropping support for older versions of Windows Qiskit's published binaries
    on PyPI will not support older versions of Windows in this release. If you're using an older version of Windows
    you can likely still build Qiskit from source using an older rust compiler (Qiskit's minimum supported rust
    version for building from source is currently 1.70) but older versions of Windows are not a supported platform
    and are untested.
