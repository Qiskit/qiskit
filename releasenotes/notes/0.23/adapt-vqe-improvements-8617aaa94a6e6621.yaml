---
features:
  - |
    The :class:`~.AdaptVQE` class has a new attribute,
    :attr:`~.AdaptVQEResult.eigenvalue_history`, which is used to track
    the lowest achieved energy per iteration of the AdaptVQE. For example::

        from qiskit.algorithms.minimum_eigensolvers import VQE
        from qiskit.algorithms.minimum_eigensolvers.adapt_vqe import AdaptVQE
        from qiskit.algorithms.optimizers import SLSQP
        from qiskit.circuit.library import EvolvedOperatorAnsatz
        from qiskit.opflow import PauliSumOp
        from qiskit.primitives import Estimator
        from qiskit.quantum_info import SparsePauliOp
        from qiskit.utils import algorithm_globals

        excitation_pool = [
            PauliSumOp(
                SparsePauliOp(["IIIY", "IIZY"], coeffs=[0.5 + 0.0j, -0.5 + 0.0j]), coeff=1.0
            ),
            PauliSumOp(
                SparsePauliOp(["ZYII", "IYZI"], coeffs=[-0.5 + 0.0j, 0.5 + 0.0j]), coeff=1.0
            ),
            PauliSumOp(
                SparsePauliOp(
                    ["ZXZY", "IXIY", "IYIX", "ZYZX", "IYZX", "ZYIX", "ZXIY", "IXZY"],
                    coeffs=[
                        -0.125 + 0.0j,
                        0.125 + 0.0j,
                        -0.125 + 0.0j,
                        0.125 + 0.0j,
                        0.125 + 0.0j,
                        -0.125 + 0.0j,
                        0.125 + 0.0j,
                        -0.125 + 0.0j,
                    ],
                ),
                coeff=1.0,
            ),
        ]
        ansatz = EvolvedOperatorAnsatz(excitation_pool, initial_state=self.initial_state)
        optimizer = SLSQP()
        h2_op = PauliSumOp.from_list(
            [
                ("IIII", -0.8105479805373266),
                ("ZZII", -0.2257534922240251),
                ("IIZI", +0.12091263261776641),
                ("ZIZI", +0.12091263261776641),
                ("IZZI", +0.17218393261915543),
                ("IIIZ", +0.17218393261915546),
                ("IZIZ", +0.1661454325638243),
                ("ZZIZ", +0.1661454325638243),
                ("IIZZ", -0.2257534922240251),
                ("IZZZ", +0.16892753870087926),
                ("ZZZZ", +0.17464343068300464),
                ("IXIX", +0.04523279994605788),
                ("ZXIX", +0.04523279994605788),
                ("IXZX", -0.04523279994605788),
                ("ZXZX", -0.04523279994605788),
            ]
        )

        algorithm_globals.random_seed = 42
        calc = AdaptVQE(VQE(Estimator(), ansatz, self.optimizer))
        res = calc.compute_minimum_eigenvalue(operator=h2_op)

        print(calc.eigenvalue_history)

    the returned value of ``calc.history`` should be roughly ``[-1.85727503]`` as
    there is a single iteration.
  - |
    The runtime logging when running the :class:`~.AdaptVQE` has been improved.
    When running the class now, ``DEBUG`` and ``INFO`` level log messages
    will be emitted as the class runs.
