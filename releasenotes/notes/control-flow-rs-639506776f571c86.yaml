---
upgrade_circuits:
  - |
    The internal representation of :class:`.ControlFlowOp`\ s has changed when
    they're added to a :class:`.QuantumCircuit`. The object stored in the circuit 
    and returned on future access will not necessarily be the same instance added
    to the circuit. This was never guaranteed to be the case and mutating control
    flow operation objects directly or by reference was unsound and always
    likely to corrupt the circuit.
    If you need to mutate an element in the circuit (which is **not** recommended
    as itâ€™s inefficient and error prone) you should ensure that you do something
    like::

      from qiskit.circuit import QuantumCircuit

      qc = QuantumCircuit(2)

      # original box and body
      with qc.box():
        qc.cx(0, 1)

      # create new box op using old one as template
      new_box_body = QuantumCircuit(2)
      new_box_body.cx(0, 1)
      new_box_body.h(0)
      new_box_op = qc.data[0].operation.replace_blocks((new_box_body,))

      # replace the original operation
      qc.data[0] = qc.data[0].replace(operation=new_box_op)

    This also applies to :class:`.DAGCircuit` too, but you can use
    :meth:`.DAGCircuit.substitute_node` instead.
