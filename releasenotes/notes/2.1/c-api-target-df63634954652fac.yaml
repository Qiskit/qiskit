---
features_transpiler:
  - |
    Support for creation and interaction with the :class:`~.Target` have
    been added to the Qiskit C API.

    Here's an example of how it is used:

    .. code-block:: C

      #include <qiskit.h>
      #include <math.h>

      // Create a Target with space for 2 qubit operations
      QkTarget *target = qk_target_new(2);

      // Create a Target Entry for a CRX Gate with fixed parameters
      double crx_params[1] = {3.14};
      QkTargetEntry *cx_entry = qk_target_entry_new_fixed(QkGate_CRX, crx_params);

      // Add mapping between (0, 1) and properties duration of 1.93e-9 and error 3.17e-10.
      uint32_t qargs[2] = {0, 1};
      qk_target_entry_add(entry, qargs, 2, 1.93e-9, 3.17e-10);
      // Add mapping between (1, 0) and properties duration of 1.27e-9 and no error.
      uint32_t rev_qargs[2] = {1, 0};
      qk_target_entry_add(entry, rev_qargs, 2, 1.27e-9, NAN);

      // Add CRX entry to the target.
      QkExitCode result_crx = qk_target_add_instruction(target, entry);

      // Add global Y gate entry to the target
      QkExitCode result_crx = qk_target_add_instruction(target, qk_target_entry_new(QkGate_Y));
