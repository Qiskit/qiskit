---
features:
  - |
    The ability to pass qubit and measurement LO frequencies has now been added to
    :class:`~qiskit.circuit.QuantumCircuit` jobs. This was previously only allowed on
    jobs that ran :class:`~qiskit.pulse.Schedule` objects. These frequencies can be set at
    both the job and experiment (individual :class:`~qiskit.circuit.QuantumCircuit`) level.

    At the job level, the fields ``default_qubit_los`` and ``default_meas_los`` may be used as
    arguments to :func:`~qiskit.execute_function.execute` for both circuit and pulse jobs. The
    fields are lists of floats representing qubit drive and measure LO frequencies (in Hz) and
    are indexed by qubit number (entry 0 is qubit 0, entry 1 is qubit 1, etc...). The length of
    the list must be equal to the number of qubits in the system. The same functionality is
    provided by passing the arguments ``qubit_lo_freq`` and ``meas_lo_freq`` to
    :func:`~qiskit.compiler.assemble`. For example, consider running circuit ``circ`` on some
    ``backend`` with 3 qubits. You want to use qubit frequencies ``[5e9, 4.9e9, 5.1e9]`` and
    measurement frequencies ``[5.5e9, 6.5e9, 7.1e9]``. This can be achieved by::

      job = execute(
              circ,
              backend,
              default_qubit_los=[5e9, 4.9e9, 5.1e9],
              default_meas_los=[5.5e9, 6.5e9, 7.1e9]
            )

    or::

      qobj = assemble(
              circ,
              backend,
              qubit_lo_freq=[5e9, 4.9e9, 5.1e9],
              meas_lo_freq=[5.5e9, 6.5e9, 7.1e9]
            )

    At the experiment (individual
    :class:`~qiskit.circuit.QuantumCircuit`/:class:`~qiskit.pulse.schedule`) level, the kwarg
    ``schedule_los`` may be used as an argument to either the
    :func:`~qiskit.execute_function.execute` or :func:`~qiskit.compiler.assemble` functions. If
    ``schedule_los`` is provided and an LO for a given qubit is missing, the job level values will
    be used. If the job level values are also missing, an error will be thrown. For example if
    running on a 3 qubit backend::

      import qiskit.pulse
      job = execute(
              circ,
              backend,
              default_qubit_los=[5e9, 4.9e9, 5.1e9],
              default_meas_los=[5.5e9, 6.5e9, 7.1e9]),
              schedule_los={pulse.DriveChannel(0):5.5e9}, pulse.MeasureChannel(2):6.5e9}
            )

    This will apply drive LO ``5.5e9`` to qubit 0 and meas LO ``6.5e9`` to qubit 2 and will use the
    values from ``default_qubit_los`` and ``default_meas_los`` for qubit 1.

  - |
    The :class:`~qiskit.providers.models.QasmBackendConfiguration` has two
    new kwargs, ``qubit_lo_range`` and ``meas_lo_range``, on it's constructor.
    These kwargs are equivalent to the kwargs on the
    :class:`~qiskit.providers.models.PulseBackendConfiguration` class
    constructor and are used to determine set the allowed range of values for a
    LO frequencies for a Qasm backend. When set these values get set as the
    :attr:`~qiskit.providers.models.QasmBackendConfiguration.qubit_lo_range` and
    :attr:`~qiskit.providers.models.QasmBackendConfiguration.meas_lo_range` attributes.
