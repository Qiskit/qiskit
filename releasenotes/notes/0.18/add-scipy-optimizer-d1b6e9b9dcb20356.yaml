---
features:
  - |
    Add :class:`~qiskit.algorithms.optimizers.SciPyOptimizer` as a simple wrapper class of `scipy.optimize.minimize`.
    :class:`~qiskit.algorithms.optimizers.SciPyOptimizer` enable to use all optimization solvers and
    enable to use all parameters (e.g. callback) which are supported by `scipy.optimize.minimize`.
    For example:

    .. code-block:: python

        from qiskit.algorithms.optimizers import SciPyOptimizer

        values = []

        def callback(x):
            values.append(x)

        optimizer = SciPyOptimizer("BFGS", options={"maxiter": 1000}, callback=callback)

    You can continue to use existing qiskit optimizers such as :class:`~qiskit.algorithms.optimizers.CG` and :class:`~qiskit.algorithms.optimizers.L_BFGS_B`.
deprecations:
  - |
    Argument parameters `epsilon` and `factr` of `~qiskit.algorithms.optimizers.L_BFGS_B`
    and `factr` of `~qiskit.algorithms.optimizers.P_BFGS` are deprecated.
    You can just use `eps` instead of `epsilon`. `factr` is replaced with ftol.
    The relationship between the two is :code:`ftol = factr * numpy.finfo(float).eps`.
    See `scipy.optimize.minimize(method=’L-BFGS-B’) <https://docs.scipy.org/doc/scipy/reference/optimize.minimize-lbfgsb.html>`__
    for more information.
