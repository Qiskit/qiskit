name: Coverage report
on:
  push:
  pull_request:
    branches: ['main']
concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: default
          components: llvm-tools-preview

      - name: Install dependencies
        run: |
            cargo install grcov
            sudo apt-get install lcov

      # This is needed to support any requirements, particularly in the `optionals` set,
      # that might not have 'pyproject.toml' files specifying their build requirements.
      # Modern pip (23.1+) can error out if it doesn't have `wheel` and we ask for one
      # of these legacy packages.
      - name: Ensure basic build requirements
        run: pip install --upgrade pip setuptools wheel

      - name: Build and install qiskit-terra
        run: pip install -e .
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "qiskit-%p-%m.profraw"
          SETUPTOOLS_ENABLE_FEATURES: "legacy-editable"

      - name: Generate unittest coverage report
        run: |
          set -e
          pip install -r requirements-dev.txt qiskit-aer
          stestr run
          # We set the --source-dir to '.' because we want all paths to appear relative to the repo
          # root (we need to combine them with the Python ones), but we only care about `grcov`
          # keeping the `crates/*` files; we don't care about coverage in dependencies.
          grcov . --binary-path target/debug/ --source-dir . --output-type lcov --output-path rust.info --llvm --branch --parallel --keep-only 'crates/*'
        env:
          QISKIT_TEST_CAPTURE_STREAMS: 1
          QISKIT_PARALLEL: FALSE
          PYTHON: "coverage run --source qiskit --parallel-mode"

      - name: Convert to lcov and combine data
        run: |
          set -e
          coverage combine
          coverage lcov -o python.info
          lcov --add-tracefile python.info --add-tracefile rust.info --output-file coveralls.info

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coveralls.info
