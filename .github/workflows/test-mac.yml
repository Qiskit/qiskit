---
name: Test Windows
on:
  workflow_call:
    inputs:
      python-version:
        description: >
          Python version to currently test
        type: string
        required: true

      install-optionals:
        description: >
          Decides whether we install optyional dependencies
        type: boolean
        default: false

  merge_group:

jobs:
  tests-mac:
    if: github.repository_owner == 'Qiskit'
    name: macOS-arm64-tests-Python-${{ inputs.python-version }}
    runs-on: macOS-14
    env:
      QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
      PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip
      QISKIT_TEST_CAPTURE_STREAMS: 1
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.70
        if: inputs.python-version == '3.9'
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          architecture: arm64
      - name: Cache stestr
        uses: actions/cache@v4
        with:
          key: 'stestr | "${{ runner.os }}" | "${{ inputs.python-version }}" | "${{ github.run_id }}"'
          restore-keys: |
            stestr | "${{ runner.os }}" | "${{ inputs.python-version }}"
            stestr | "${{ runner.os }}"
            stestr
          path: .stestr
      - name: "Install dependencies"
        run: |
          set -e
          python -m pip install --upgrade pip setuptools wheel virtualenv
          virtualenv test-job
          source test-job/bin/activate
          python -m pip install -U pip setuptools wheel
          python -m pip install -U \
            -c constraints.txt \
            -r requirements.txt \
            -r requirements-dev.txt \
            -e .
            # Build and install both qiskit and qiskit-terra so that any optionals
            # depending on `qiskit` will resolve correctly.
          pip check
      - name: "Install optionals"
        run: |
          set -e
          source test-job/bin/activate
          pip install -r requirements-optional.txt -c constraints.txt
        if: ${{ inputs.install-optionals }}
      - name: "Run tests"
        run: |
          set -e
          source test-job/bin/activate
          python tools/report_numpy_state.py
          export PYTHONHASHSEED=$(python -S -c "import random; print(random.randint(1, 4294967295))")
          echo "PYTHONHASHSEED=$PYTHONHASHSEED"
          stestr run
        env:
          QISKIT_PARALLEL: FALSE
          RUST_BACKTRACE: 1
      - name: Copy and Publish images
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: copied-images
          path: "**/*.png"
          if-no-files-found: error
