---
name: Rust Tests
on:
  workflow_call:
    inputs:
      python-version:
        description: >
          Python version to currently test
        type: string
        required: true

      runner:
        description: >
          Describes the system this workflow should run on.
        type: string
        required: true
      install-optionals:
        description: >
          Decides whether we install optyional dependencies
        type: boolean
        default: false

      install-from-sdist:
        description: >
          Decides whether we perform rust tests
        type: boolean
        default: false

jobs:
  unit-tests:
    name: Tests-Rust-${{ inputs.python-version }}
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 60
    env:
      QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
      PIP_CACHE_DIR: ${{ github.workspace }}/.pip
      QISKIT_TEST_CAPTURE_STREAMS: 1
      HAVE_VISUAL_TESTS_RUN: false
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.79
        if: inputs.python-version == '3.9'
      - name: Set up Python ${{ inputs.python-version }}
        id: python-outputs
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Prepare venv
        run: |
          set -e
          python -m pip install --upgrade pip setuptools wheel
          python -m venv test-job
      - name: Install Qiskit from sdist
        if: ${{ inputs.install-from-sdist }}
        run: |
          set -e
          # Use stable Rust, rather than MSRV, to spot-check that stable builds properly.
          rustup override set stable
          source test-job/bin/activate
          python -m pip install -U pip build
          python -m build --sdist .
          python -m pip install -U \
              -c constraints.txt \
              -r requirements.txt \
              -r requirements-dev.txt \
              dist/qiskit-*.tar.gz
          # Build and install both qiskit and qiskit-terra so that any optionals
          # depending on `qiskit` will resolve correctly.
      - name: Install Qiskit directly
        if: ${{ !inputs.install-from-sdist }}
        run: |
          set -e
          source test-job/bin/activate
          python -m pip install -U \
              -c constraints.txt \
              -r requirements.txt \
              -r requirements-dev.txt \
              -e .
          # Build and install both qiskit and qiskit-terra so that any optionals
          # depending on `qiskit` will resolve correctly.
      - name: Run Rust Tests
        # Note that we use the virtual env with Qiskit installed to run the Rust
        # tests since some of them still depend on Qiskit's Python API via PyO3.
        run: |
          source test-job/bin/activate
          python tools/report_numpy_state.py
          python tools/run_cargo_test.py
