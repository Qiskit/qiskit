---
name: Test Windows
on:
  workflow_call:
    inputs:
      python-version:
        description: >
          Python version to currently test
        type: string
        required: true
      
      runner:
        description: >
          Describes the system this workflow should run on.
        type: string
        required: true

      install-optionals:
        description: >
          Decides whether we install optyional dependencies
        type: boolean
        default: false

  merge_group:

jobs:
  test-windows:
    if: github.repository_owner == 'Qiskit'
    name: ${{ inputs.runner }}-tests-Python-${{ inputs.python-version }}
    runs-on: ${{ inputs.runner }}
    env:
      QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
      QISKIT_TEST_CAPTURE_STREAMS: 1
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.79
        if: inputs.python-version == '3.9'
      - name: Set up Python ${{ inputs.python-version }}
        id: python-outputs
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Cache stestr
        uses: actions/cache@v4
        with:
          key: 'stestr | "${{ runner.os }}" | "${{ inputs.python-version }}" | "${{ github.run_id }}"'
          restore-keys: |
            stestr | "${{ runner.os }}" | "${{ inputs.python-version }}"
            stestr | "${{ runner.os }}"
            stestr
          path: .stestr
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m venv test-job
          .\test-job\Scripts\activate
          python -m pip install -U pip setuptools wheel
          python -m pip install -U `
            -c constraints.txt `
            -r requirements.txt `
            -r requirements-dev.txt `
            -e .
          # Build and install both qiskit and qiskit-terra so that any optionals
          # depending on `qiskit` will resolve correctly.
          pip check
      - name: Install Optional packages
        run: |
          .\test-job\Scripts\activate
          pip install -c constraints.txt -r requirements-optional.txt
          pip check
        if: ${{ inputs.install-optionals }}
      - name: Run Tests
        run: |
          chcp.com 65001
          .\test-job\Scripts\activate
          python tools/report_numpy_state.py
          $Env:PYTHONHASHSEED=$(python -S -c "import random; print(random.randint(1, 1024))")
          echo "PYTHONHASHSEED=$PYTHONHASHSEED"
          stestr run
        env:
          LANG: "C.UTF-8"
          PYTHONIOENCODING: "utf-8:backslashreplace"
          QISKIT_PARALLEL: FALSE
          QISKIT_IGNORE_USER_SETTINGS: TRUE
          RUST_BACKTRACE: 1
      - name: Copy and Publish images
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: copied-images
          path: "**/*.png"
          if-no-files-found: error
